{"ast":null,"code":"var _jsxFileName = \"/Applications/NodeJS/react/projects/15-cocktails/setup/src/context.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"a\");\n  const [cocktails, setCocktails] = useState([]);\n\n  const fetchDrinks = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      loading,\n      searchTerm,\n      cocktails,\n      setSearchTerm\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/Applications/NodeJS/react/projects/15-cocktails/setup/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","url","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","response","fetch","data","json","console","log","error","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAG,2DAAZ;AACA,MAAMC,UAAU,GAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMe,WAAW,GAAG,YAAY;AAC/BL,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACH,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAI,GAAEO,UAAW,EAArB,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,KAJD,CAIE,OAAOI,KAAP,EAAc;AACfF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA;AACD,GATD;;AAUApB,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,WAAW;AACX,GAFQ,EAEN,CAACJ,UAAD,CAFM,CAAT;AAIA,sBACC,oBAAC,UAAD,CAAY,QAAZ;AACC,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAF;AAAWE,MAAAA,UAAX;AAAuBE,MAAAA,SAAvB;AAAkCD,MAAAA;AAAlC,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEJ,QAHF,CADD;AAOA,CA1BD,C,CA2BA;;;AACA,OAAO,MAAMe,gBAAgB,GAAG,MAAM;AACrC,SAAOtB,UAAU,CAACI,UAAD,CAAjB;AACA,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\n\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [searchTerm, setSearchTerm] = useState(\"a\");\n\tconst [cocktails, setCocktails] = useState([]);\n\n\tconst fetchDrinks = async () => {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst response = await fetch(`${url}${searchTerm}`);\n\t\t\tconst data = await response.json();\n\t\t\tconsole.log(data);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tfetchDrinks();\n\t}, [searchTerm]);\n\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{ loading, searchTerm, cocktails, setSearchTerm }}\n\t\t>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t);\n};\n// make sure use\nexport const useGlobalContext = () => {\n\treturn useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n"]},"metadata":{},"sourceType":"module"}